server:
  port: 8764
  connection-timeout: 6000
#  servlet:
#    context-path: /customer
spring:
  application:
    name: customer-service
  redis:
    port: 6379
    host: xzhwxx.xyz
    database: 0   #选择redis的db0作为缓存存储位置
    jedis:
      pool:
        max-active: 50
        max-wait: 3000   #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 20     # 连接池中的最大空闲连接
        min-idle: 2
    timeout: 5000
#    password: springboot  # Redis服务器连接密码（默认为空）

#  jackson:
#    property-naming-strategy: SNAKE_CASE //统一配置json序列化格式

eurekaServer:
  host: localhost  #注册中心的地址
  port: 8761       #注册中心服务端的端口号
#  user: martin     #注册中心安全校验用户名
#  password: 123456 #注册中心安全校验密码

eureka:
  server:
    max-time-for-replication: 30000
  client:
    register-with-eureka: true  #将此项目注册到Eureka服务
    service-url:
#          defaultZone: http://${eurekaServer.user}:${eurekaServer.password}@${eurekaServer.host}:${eurekaServer.port}/eureka
      defaultZone: http://localhost:8761/eureka/    #注册地址
    fetch-registry: true

#在feign中使用hystrix断路器
feign:
  hystrix:
    enabled: true
  client:
    provide:
      name: provider-service
      path: /provider
    config:
      provider-service:
        connectTimeout: 500
        readTimeout: 500
#        loggerLevel: basic
  httpclient:
    connection-timeout: 500
    enabled: true
    max-connections: 200
    follow-redirects: true
    connection-timer-repeat: 3000

ribbon:
  OkToRetryOnAllOperations: false
  ReadTimeout: 500
  ConnectTimeout: 500
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  eager-load:
    enabled: true
    clients: ${feign.client.provide.name}

hystrix:
  threadpool:
    default:
      coreSize: 12 #并发执行的最大线程数，默认10
      maxQueueSize: 20 #BlockingQueue的最大队列长度,默认-1,使用SynchronousQueue。其他值则使用 LinkedBlockingQueue。
      queueSizeRejectionThreshold: 10 #排队线程数量阈值，默认为5，达到时拒绝，如果配置了该选项，队列的大小是该队列

  command:
    ##内置全局默认值
    default:
      fallback:
        enabled: true #确定在发生失败或拒绝时是否尝试调用HystrixCommand.getFallback（）。默认值为true
        isolation:
          semaphore:
            maxConcurrentRequests: 10 #设置从调用线程允许HystrixCommand.getFallback（）方法的最大请求数。 SEMAPHORE模式有效, 默认值：10

      circuitBreaker:
        enabled: true #确定断路器是否用于跟踪运行状况和短路请求（如果跳闸）。默认true
        requestVolumeThreshold: 10 #当在配置时间窗口内达到此数量的失败后，进行短路。默认20个
        sleepWindowInMilliseconds: 10000 #短路多久以后开始尝试是否恢复，默认5000
        errorThresholdPercentage: #出错百分比阈值，当达到此阈值后，开始短路。默认50%
        forceOpen: false #强制断路器进入打开（跳闸）状态，其中它将拒绝所有请求。默认false,此属性优先于circuitBreaker.forceClosed
        forceClosed: false #迫使断路器进入闭合状态，其中它将允许请求，而不考虑误差百分比。默认值为false.如果是强依赖，应该设置为true
                            #circuitBreaker.forceOpen属性优先，因此如果forceOpen设置为true，此属性不执行任何操作。
      execution:
        timeout:
          enabled: true #是否开启超时设置 默认true
        isolation:
          strategy: THREAD #隔离策略,1.THREAD - 它在单独的线程上执行，并发请求受线程池中的线程数量的限制;#2.SEMAPHORE - 它在调用线程上执行，并发请求受到信号量计数的限制
                                  #默认使用THREAD模式，以下几种场景可以使用SEMAPHORE模式：
                                  #只想控制并发度;外部的方法已经做了线程隔离;调用的是本地方法或者可靠度非常高、耗时特别小的方法（如medis）
          semaphore:
            maxConcurrentRequests: 1000 #设置在使用时允许到HystrixCommand.run（）方法的最大请求数。默认值：10,SEMAPHORE模式有效
          thread:
            interruptOnTimeout: true #在发生超时时，是否中断HystrixCommand.run() 的执行, 默认true,THREAD模式有效
            timeoutInMilliseconds: 5000 #在调用方配置，被调用的所有方法的超时时间都是该值，优先级低于指定配置(HystrixCommandKey) 默认1000
                                        #在THREAD模式下，达到超时时间，可以中断;在SEMAPHORE模式下，会等待执行完成后，再去判断是否超时
            interruptOnCancel: false #当发生取消任务时，是否中断HystrixCommand.run() 的执行, 默认false,THREAD模式有效

    ##内置实例默认值
#    "hystrixServiceFeign#hello()": #不好使
    hystrixTimeoutTest: #实例属性配置（hystrixTimeoutTest为指定的commandKey)
      execution:
        timeout:
          enable: true
        isolation:
          thread:
            timeoutInMilliseconds: 500 #在调用方配置，被调用方的指定方法的超时时间 注意:如果maxQueueSize=-1的话，则该选项不起作用

    HystrixConfigTestKey: #实例属性配置（HystrixConfigTestKey为指定的commandKey)
      execution:
        timeout:
          enable: true
        isolation:
          thread:
            timeoutInMilliseconds: 50 #在调用方配置，被调用方的指定方法的超时时间 注意:如果maxQueueSize=-1的话，则该选项不起作用

  shareSecurityContext: true

#rocketMQ
apache:
  rocketmq:
    namesrvAddr: 127.0.0.1:9876   # NameServer地址
    producer:
      producerGroup: Producer   # 生产者的组名
    consumer:
      pushConsumer: PushConsumer # 消费者的组名






httpClient:
  pool:
    timeToLive: 6000
    maxTotal: 100
    maxPerRoute: 50
    socketTimeout: 15000
    connectTimeout: 15000
    connectionRequestTimeout: 5000
    keepAlive: 30000
  proxy:
    https:
      hostname: proxy-internet-aws-china-production.subsidia.org
      port: 3128
      schema: https

